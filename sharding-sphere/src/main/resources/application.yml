server:
  port: 1235

spring:
  mvc:
    static-path-pattern: /**       #满足才会执行非controller请求,默认即/**
  #模板引擎
  freemarker:
    template-loader-path:
      - classpath:/templates/
    suffix: .html   #模板文件后缀名
  redis:
    host: 127.0.0.1
    port: 6380

  #分库分表
  shardingsphere:
    datasource:
      #配置真实数据源
      names: wg1,wg2
      wg1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/wind_gone?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456

      wg2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/wind_gone_2?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456

    #单分片键
    sharding:
      default-data-source-name: wg1   #没有配置分库策略的默认数据源
#      default-database-strategy:          #默认分库策略
#        inline:
#          sharding-column: id
#          algorithm-expression: wg$->{1}    #主键取余决定去哪个库
#      default-table-strategy:
#        inline:
#          sharding-column: id
#          algorithm-expression: sys_user_$->{1-id % 2}

      tables:
        sys_role:
          actual-data-nodes: wg$->{1..2}.sys_role   #可以不用写,对于那些只有一个库的表,没做水平拆分的可以写一下
          database-strategy:
            standard:   #标准分片策略,只支持单分片键
              sharding-column: id
              precise-algorithm-class-name: com.trevis.sharding.config.standard.PreciseDbConfig        # 必选  =,in
              #range-algorithm-class-name:          #  between and
        sys_user:
          actual-data-nodes: wg$->{1..2}.sys_user_$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: sys_user_$->{id % 2}    #主键取余决定去哪个库
          database-strategy:
            inline:    #行表达式分片
              sharding-column: id
              algorithm-expression: wg$->{id % 2+1}    #主键取余决定去哪个库
          key-generator:
            column: id
            type: SNOWFLAKE
      #broadcast-tables:    #字典表,每次crud所有数据源里的表都会被修改


    #显示sql
    props:
      sql:
        show: true
  #允许一个实体类映射多张表
  main:
    allow-bean-definition-overriding: true


mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志

